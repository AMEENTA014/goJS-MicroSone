name: Build, Test, and Deploy User Service

on:
  push:
    branches: [main]
    paths:
      - '**.js'
      - '**.mjs'
      - '**/package.json'
      - 'Dockerfile'
      - 'k8s/*'

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    env:
      USE_POSTGRES: ${{ secrets.USE_POSTGRES }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PORT: ${{ secrets.PORT }}
      DYNAMODB_ENDPOINT: ${{ secrets.DYNAMODB_ENDPOINT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run:  npm install
        working-directory: ./src

      - name: Run tests
        run: npm test
        working-directory: ./src

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: hal78/microsone:latest
      - name:  listing error  
        run: ls -R
      - name: Update deployment YAML with new image
        run: |
          sed -i "s|image: .*|image: hal78/microsone:latest|g" k8s/user-deployment.yaml
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add k8s/user-deployment.yaml
          git commit -m "ci: update deployment image tag [skip ci]" || echo "No change"
          git push || echo "No changes to commit"

      - name: Trigger Argo CD Sync (optional)
        if: always()
        run: echo "Argo CD will detect manifest change and sync automatically."
